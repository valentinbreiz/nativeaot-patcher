<Project>
  <Import Project="Asm.Build.Unix.targets" Condition="'$(OS)' != 'Windows_NT'"/>
  <Import Project="Asm.Build.Windows.targets" Condition="'$(OS)' == 'Windows_NT'"/>

  <Target Name="FindSourceFilesForYasm" AfterTargets="Build">
    <PropertyGroup>
      <TargetArchitecture Condition="$(RuntimeIdentifier) != ''">$(RuntimeIdentifier.Split('-')[1])</TargetArchitecture>
    </PropertyGroup>

    <!-- Automatically add native package search paths based on architecture -->
    <PropertyGroup Condition="'$(TargetArchitecture)' == 'x64'">
      <CosmosNativePackagePath>$(NuGetPackageRoot)cosmos.kernel.native.x64/3.0.0/build</CosmosNativePackagePath>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetArchitecture)' == 'arm64'">
      <CosmosNativePackagePath>$(NuGetPackageRoot)cosmos.kernel.native.arm64/3.0.0/build</CosmosNativePackagePath>
    </PropertyGroup>
    
    <Message Text="🔍 [ASM] CosmosNativePackagePath: $(CosmosNativePackagePath)" Importance="High" />
    
    <ItemGroup Condition="'$(TargetArchitecture)' == 'x64'">
      <AsmSearchPath Include="$(CosmosNativePackagePath)/IO/" Condition="Exists('$(CosmosNativePackagePath)/IO/')" />
      <AsmSearchPath Include="$(CosmosNativePackagePath)/Debug/" Condition="Exists('$(CosmosNativePackagePath)/Debug/')" />
      <AsmSearchPath Include="$(CosmosNativePackagePath)/CPU/" Condition="Exists('$(CosmosNativePackagePath)/CPU/')" />
    </ItemGroup>
    <ItemGroup Condition="'$(TargetArchitecture)' == 'arm64'">
      <AsmSearchPath Include="$(CosmosNativePackagePath)/IO/" Condition="Exists('$(CosmosNativePackagePath)/IO/')" />
      <AsmSearchPath Include="$(CosmosNativePackagePath)/CPU/" Condition="Exists('$(CosmosNativePackagePath)/CPU/')" />
      <AsmSearchPath Include="$(CosmosNativePackagePath)/Debug/" Condition="Exists('$(CosmosNativePackagePath)/Debug/')" />
      <AsmSearchPath Include="$(CosmosNativePackagePath)/Runtime/" Condition="Exists('$(CosmosNativePackagePath)/Runtime/')" />
    </ItemGroup>

    <!-- Exclude Folders/Files that doesn't exists -->
    <ItemGroup>
      <NonExistentPaths Include="@(AsmSearchPath)" Condition="!Exists('%(FullPath)')" />
      <NonExistentFiles Include="@(AsmFiles)" Condition="!Exists('%(FullPath)')" />
      <AsmSearchPath Remove="@(NonExistentPaths)" />
      <AsmFiles Remove="@(NonExistentFiles)" />
    </ItemGroup>

    <Warning Text="Folder does not exists: %(NonExistentPaths.Identity)" Condition="@(NonExistentPaths) != ''" />
    <Warning Text="File does not exists: %(NonExistentFiles.Identity)" Condition="@(NonExistentFiles) != ''" />

    <!-- Override Folders For Architecture Specific Ones -->
    <ItemGroup Condition="'$(TargetArchitecture)' != ''">
      <AsmSearchPathWithArch Include="@(AsmSearchPath)" Condition="Exists('%(FullPath)/$(TargetArchitecture)/')" />
      <AsmSearchPath Remove="@(AsmSearchPathWithArch)"/>
      <AsmSearchPath Include="@(AsmSearchPathWithArch->'%(FullPath)/$(TargetArchitecture)/')"/>
    </ItemGroup>

    <PropertyGroup>
      <!-- Search for .asm files (YASM/NASM) for x64, .s files (GNU AS) for ARM64 -->
      <AsmSearchPattern Condition="'$(TargetArchitecture)' == 'x64' or '$(TargetArchitecture)' == ''">@(AsmSearchPath->'%(FullPath)/*.asm')</AsmSearchPattern>
      <AsmSearchPattern Condition="'$(TargetArchitecture)' == 'arm64'">@(AsmSearchPath->'%(FullPath)/*.s')</AsmSearchPattern>
    </PropertyGroup>

    <Message Text="⚙️  [ASM] TargetArchitecture: $(TargetArchitecture), CosmosArch: $(CosmosArch)" Importance="High" />
    <Message Text="⚙️  [ASM] Searching assembly files on: @(AsmSearchPath)" Importance="High" />
    <ItemGroup>
      <!-- Use the search pattern to find the .asm files -->
      <AsmSearch Include="$(AsmSearchPattern)" />
      <!-- Remove Duplicates -->
      <AsmSearch Remove="@(AsmFiles)" />
      <!-- Add Search Result -->
      <AsmFiles Include="@(AsmSearch)" />
    </ItemGroup>

    <Message Text="✅ [ASM] Number of Asm files found: @(AsmFiles->Count())" Importance="High" />
  </Target>

  <!-- Example target that invokes the YasmBuildTask to compile assembly source files -->
  <Target Name="BuildYasm" AfterTargets="Build" DependsOnTargets="FindSourceFilesForYasm; GetYasm">
    <PropertyGroup>
      <YasmPath Condition="$(YasmPath) == ''">/usr/bin/yasm</YasmPath>
      <!-- Adjust output path if needed -->
      <AsmOutputPath>$(IntermediateOutputPath)/cosmos/asm/</AsmOutputPath>
    </PropertyGroup>


    <!-- Invoke the custom Yasm task -->
    <YasmBuildTask
      YasmPath="$(YasmPath)"
      OutputPath="$(AsmOutputPath)"
      SourceFiles="@(AsmFiles)"
      TargetArchitecture="$(TargetArchitecture)" />

    <Message Text="✅ [ASM] Asm files compiled to: $(AsmOutputPath)" Importance="High" />
  </Target>

  <!-- Clean target to remove the asm folder -->
  <Target Name="CleanYasm" BeforeTargets="Clean">
    <PropertyGroup>
      <AsmOutputPath>$(IntermediateOutputPath)/cosmos/asm/</AsmOutputPath>
    </PropertyGroup>

    <RemoveDir Directories="$(AsmOutputPath)" />
  </Target>

</Project>
