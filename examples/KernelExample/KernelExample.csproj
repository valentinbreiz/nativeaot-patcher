<Project Sdk="Microsoft.NET.Sdk">

  <Sdk Name="Cosmos.Sdk" Version="3.0.0" />

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IlcSystemModule>System.Private.CoreLib</IlcSystemModule>
    <!--
    <NoStdLib>true</NoStdLib>
    <NoConfig>true</NoConfig>
     TODO: The next properties are a requirement to allow build with Test.CoreLib
        , decide if they should be on the Sdk Package or set by the user -->

    <!-- Cosmos.Sdk is not compatible with Global Package managment -->
    <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <InvariantGlobalization>true</InvariantGlobalization>
    <SelfContained>true</SelfContained>
    <PublishTrimmed>true</PublishTrimmed>
  </PropertyGroup>

  <!-- Add any folder(s) where *.asm files exist -->
  <ItemGroup>
    <AsmSearchPath Include="./src/Asm/" />
    <!-- You can also do: <AsmFiles Include="/path/to/file.asm" /> -->
  </ItemGroup>

  <!-- Add any folder(s) where *.c files exist -->
  <ItemGroup>
    <GCCProject Include="./src/C/" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Cosmos.Kernel.Boot.Limine\Cosmos.Kernel.Boot.Limine.csproj" />
    <ProjectReference Include="..\..\src\Cosmos.Kernel.Core\Cosmos.Kernel.Core.csproj" />
    <ProjectReference Include="..\..\src\Cosmos.Kernel.HAL\Cosmos.Kernel.HAL.csproj" />
    <ProjectReference Include="..\..\src\Cosmos.Kernel.Plugs\Cosmos.Kernel.Plugs.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Cosmos.Kernel.Native.x86" Version="3.0.0"/>
  </ItemGroup>

  <ItemGroup>
    <PlugReference Include="Cosmos.Kernel.Plugs" />
  </ItemGroup>

  <Target Name="CustomIlcArgs" BeforeTargets="WriteIlcRsp" DependsOnTargets="PrepareForILLink">
    <ItemGroup>
      <IlcArg Include="--feature:System.Diagnostics.Tracing.EventSource.IsSupported=false" />
    </ItemGroup>
  </Target>
</Project>
